{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/cart.model.ts","webpack:///./src/app/model/model.module.ts","webpack:///./src/app/model/order.model.ts","webpack:///./src/app/model/order.repository.ts","webpack:///./src/app/model/product.model.ts","webpack:///./src/app/model/product.repository.ts","webpack:///./src/app/model/static.datasource.ts","webpack:///./src/app/store/cartDetail.component.html","webpack:///./src/app/store/cartDetail.component.ts","webpack:///./src/app/store/cartSummary.component.html","webpack:///./src/app/store/cartsummary.component.ts","webpack:///./src/app/store/checkout.component.css","webpack:///./src/app/store/checkout.component.html","webpack:///./src/app/store/checkout.component.ts","webpack:///./src/app/store/counter.directive.ts","webpack:///./src/app/store/store.component.html","webpack:///./src/app/store/store.component.ts","webpack:///./src/app/store/store.module.ts","webpack:///./src/app/storeFirst.guard.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  template: \"<router-outlet></router-outlet>\"\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from \"./store/store.module\";\nimport { StoreComponent } from \"./store/store.component\";\nimport { CheckoutComponent } from \"./store/checkout.component\";\nimport { CartDetailComponent } from \"./store/cartDetail.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { StoreFirstGuard } from \"./storeFirst.guard\";\n\n@NgModule({\n  imports: [BrowserModule, StoreModule,\n    RouterModule.forRoot([\n      {\n        path: \"store\", component: StoreComponent,\n        canActivate: [StoreFirstGuard]\n      },\n      {\n        path: \"cart\", component: CartDetailComponent,\n        canActivate: [StoreFirstGuard]\n      },\n      {\n        path: \"checkout\", component: CheckoutComponent,\n        canActivate: [StoreFirstGuard]\n      },\n      { path: \"**\", redirectTo: \"/store\" }\n    ], { useHash: true })],\n  providers: [StoreFirstGuard],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\n\r\n@Injectable()\r\nexport class Cart {\r\n  public lines:CartLine[] = [];\r\n  public itemCount:number = 0;\r\n  public cartPrice:number = 0;\r\n\r\n  addLine(product:Product, quantity:number=1) {\r\n    let line = this.lines.find(line => line.product.id == product.id);\r\n    if (line != undefined) {\r\n      line.quantity += quantity;\r\n    } else {\r\n      this.lines.push(new CartLine(product, quantity));\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  updateQuantity(product:Product, quantity:number) {\r\n    let line = this.lines.find(line => line.product.id == product.id);\r\n    if (line != undefined) {\r\n      line.quantity = Number(quantity);\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  removeLine(id:number) {\r\n    let index = this.lines.findIndex(line => line.product.id == id);\r\n    this.lines.splice(index, 1);\r\n    this.recalculate();\r\n  }\r\n\r\n  clear() {\r\n    this.lines = [];\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n  }\r\n\r\n  private recalculate() {\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n    this.lines.forEach(l => {\r\n      this.itemCount += l.quantity;\r\n      this.cartPrice += (l.quantity * l.product.price);\r\n    });\r\n  }\r\n}\r\n\r\nexport class CartLine {\r\n  constructor(public product:Product, public quantity:number) {\r\n\r\n  }\r\n\r\n  get lineTotal() {\r\n    return this.quantity * this.product.price;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ProductRepository } from \"./product.repository\";\r\nimport { StaticDataSource } from \"./static.datasource\";\r\nimport { Cart } from \"./cart.model\";\r\nimport { Order } from \"./order.model\";\r\nimport { OrderRepository } from \"./order.repository\";\r\nimport { RestDataSource } from \"./rest.datasource\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\n@NgModule({\r\n  imports: [HttpModule],\r\n  providers: [ProductRepository, Cart, Order, OrderRepository,\r\n    { provide: StaticDataSource, useClass: StaticDataSource }]\r\n})\r\nexport class ModelModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Cart } from \"./cart.model\";\r\n\r\n@Injectable()\r\nexport class Order {\r\n  public id:number;\r\n  public name:string;\r\n  public address:string;\r\n  public city:string;\r\n  public state:string;\r\n  public zip:string;\r\n  public country:string;\r\n  public shipped:boolean = false;\r\n\r\n  constructor(public cart:Cart) { }\r\n\r\n  clear() {\r\n    this.id = null;\r\n    this.name = this.address = this.city = null;\r\n    this.state = this.zip = this.country = null;\r\n    this.shipped = false;\r\n    this.cart.clear();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Order } from \"./order.model\";\r\nimport { StaticDataSource } from \"./static.datasource\";\r\n\r\n@Injectable()\r\nexport class OrderRepository {\r\n  private orders:Order[] = [];\r\n\r\n  constructor(private dataSource:StaticDataSource) { }\r\n\r\n  getOrders():Order[] {\r\n    return this.orders;\r\n  }\r\n\r\n  saveOrder(order:Order):Observable<Order> {\r\n    return this.dataSource.saveOrder(order);\r\n  }\r\n}\r\n","export class Product {\r\n  constructor(\r\n    public id?:number,\r\n    public name?:string,\r\n    public category?:string,\r\n    public description?:string,\r\n    public price?:number) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\nimport { StaticDataSource } from \"./static.datasource\";\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n  private products:Product[] = [];\r\n  private categories:string[] = [];\r\n\r\n  constructor(private dataSource: StaticDataSource) {\r\n    dataSource.getProducts().subscribe(data => {\r\n      this.products = data;\r\n      this.categories = data.map(p => p.category)\r\n        .filter((c, index, array) => array.indexOf(c) == index).sort();\r\n    });\r\n  }\r\n\r\n  getProducts(category:string = null): Product[] {\r\n    return this.products.filter(p => category == null || category == p.category)\r\n  }\r\n\r\n  getProduct(id:number):Product {\r\n    return this.products.find(p => p.id == id);\r\n  }\r\n\r\n  getCategories():string[] {\r\n    return this.categories;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/from\";\r\nimport { Order } from \"./order.model\";\r\n\r\n@Injectable()\r\nexport class StaticDataSource {\r\n  private products:Product[] = [\r\n    new Product(1, \"Product 1\", \"Category 1\", \"Product 1 (Category 1)\", 100),\r\n    new Product(2, \"Product 2\", \"Category 1\", \"Product 2 (Category 1)\", 200),\r\n    new Product(3, \"Product 3\", \"Category 1\", \"Product 3 (Category 1)\", 100),\r\n    new Product(4, \"Product 4\", \"Category 1\", \"Product 4 (Category 1)\", 100),\r\n    new Product(5, \"Product 5\", \"Category 1\", \"Product 5 (Category 1)\", 100),\r\n    new Product(6, \"Product 6\", \"Category 2\", \"Product 6 (Category 2)\", 100),\r\n    new Product(7, \"Product 7\", \"Category 2\", \"Product 7 (Category 2)\", 100),\r\n    new Product(8, \"Product 8\", \"Category 2\", \"Product 8 (Category 2)\", 50),\r\n    new Product(9, \"Product 9\", \"Category 2\", \"Product 9 (Category 2)\", 100),\r\n    new Product(10, \"Product 10\", \"Category 2\", \"Product 10 (Category 2)\", 100),\r\n    new Product(11, \"Product 11\", \"Category 3\", \"Product 11 (Category 3)\", 100),\r\n    new Product(12, \"Product 12\", \"Category 3\", \"Product 12 (Category 3)\", 100),\r\n    new Product(13, \"Product 13\", \"Category 3\", \"Product 13 (Category 3)\", 100),\r\n    new Product(14, \"Product 14\", \"Category 3\", \"Product 14 (Category 3)\", 100),\r\n    new Product(15, \"Product 15\", \"Category 3\", \"Product 15 (Category 3)\", 100)\r\n  ];\r\n\r\n  getProducts():Observable<Product[]> {\r\n    return Observable.from([this.products]);\r\n  }\r\n\r\n  saveOrder(order:Order):Observable<Order> {\r\n    console.log(JSON.stringify(order));\r\n    return Observable.from([order]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"navbar navbar-inverse bg-inverse\\\">\\r\\n  <a class=\\\"navbar-brand\\\">SPORTS STORE</a>\\r\\n</div>\\r\\n<div class=\\\"m-a-1\\\">\\r\\n  <h2 class=\\\"text-xs-center\\\">Your Cart</h2>\\r\\n  <table class=\\\"table table-bordered table-striped p-a-1\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Quantity</th>\\r\\n        <th>Product</th>\\r\\n        <th class=\\\"text-xs-right\\\">Price</th>\\r\\n        <th class=\\\"text-xs-right\\\">Subtotal</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngIf=\\\"cart.lines.length==0\\\">\\r\\n        <td colspan=\\\"4\\\" class=\\\"text-xs-center\\\">\\r\\n          Your cart is empty\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let line of cart.lines\\\">\\r\\n        <td>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control-sm\\\"\\r\\n            style=\\\"width:5em\\\"\\r\\n            [value]=\\\"line.quantity\\\"\\r\\n            (change)=\\\"cart.updateQuantity(line.product, $event.target.value)\\\" />\\r\\n        </td>\\r\\n        <td>\\r\\n          {{line.product.name}}\\r\\n        </td>\\r\\n        <td class=\\\"text-xs-right\\\">\\r\\n          {{line.product.price | currency:\\\"USD\\\":true:\\\"2.2-2\\\" }}\\r\\n        </td>\\r\\n        <td class=\\\"text-xs-right\\\">\\r\\n          {{line.lineTotal | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n        </td>\\r\\n        <td class=\\\"text-xs-center\\\">\\r\\n          <button class=\\\"btn btn-sm btn-danger\\\"\\r\\n            (click)=\\\"cart.removeLine(line.product.id)\\\">\\r\\n            Remove\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      <tr>\\r\\n        <td colspan=\\\"3\\\" class=\\\"text-xs-right\\\">Total:</td>\\r\\n        <td class=\\\"text-xs-right\\\">\\r\\n          {{cart.cartPrice | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tfoot>\\r\\n  </table>\\r\\n</div>\\r\\n<div class=\\\"text-xs-center\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" routerLink=\\\"/store\\\">Continue Shopping</button>\\r\\n  &nbsp;\\r\\n  <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/checkout\\\" [disabled]=\\\"cart.lines.length == 0\\\">\\r\\n    Checkout\\r\\n  </button>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Cart } from \"../model/cart.model\";\r\n\r\n@Component({\r\n  templateUrl: \"cartDetail.component.html\"\r\n})\r\nexport class CartDetailComponent {\r\n  constructor(public cart:Cart) { }\r\n}\r\n","module.exports = \"<div class=\\\"pull-xs-right\\\">\\r\\n  <small>\\r\\n    Your cart:\\r\\n    <span *ngIf=\\\"cart.itemCount > 0\\\">\\r\\n      {{cart.itemCount}} item(s)\\r\\n      {{cart.cartPrice | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n    </span>\\r\\n    <span *ngIf=\\\"cart.itemCount == 0\\\">\\r\\n      (empty)\\r\\n    </span>\\r\\n  </small>\\r\\n  <button class=\\\"btn btn-sm bg-inverse\\\" [disabled]=\\\"cart.itemCount == 0\\\" routerLink=\\\"/cart\\\">\\r\\n    <i class=\\\"fa fa-shopping-cart\\\">to cart</i>\\r\\n  </button>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Cart } from \"../model/cart.model\";\r\n\r\n@Component({\r\n  selector: \"cart-summary\",\r\n  templateUrl: \"cartSummary.component.html\"\r\n})\r\nexport class CartSummaryComponent {\r\n  constructor(public cart:Cart) { }\r\n}\r\n","module.exports = \"input.ng-dirty.ng-invalid { border: 2px solid #ff0000; }\\r\\ninput.ng-dirty.ng-valid { border: 2px solid #6bc502; }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvcmUvY2hlY2tvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0QkFBNEIseUJBQXlCLEVBQUU7QUFDdkQsMEJBQTBCLHlCQUF5QixFQUFFIiwiZmlsZSI6InNyYy9hcHAvc3RvcmUvY2hlY2tvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWRpcnR5Lm5nLWludmFsaWQgeyBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOyB9XHJcbmlucHV0Lm5nLWRpcnR5Lm5nLXZhbGlkIHsgYm9yZGVyOiAycHggc29saWQgIzZiYzUwMjsgfVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"navbar navbar-inverse bg-inverse\\\">\\r\\n  <a class=\\\"navbar-brand\\\">SPORTS STORE</a>\\r\\n</div>\\r\\n<div *ngIf=\\\"orderSent\\\" class=\\\"m-a-1 text-xs-center\\\">\\r\\n  <h2>Thanks!</h2>\\r\\n  <p>Thanks for placing your order.</p>\\r\\n  <p>We'll ship your goods as soon as possible.</p>\\r\\n  <button class=\\\"btn btn-primary\\\" routerLink=\\\"/store\\\">Return to Store</button>\\r\\n</div>\\r\\n<form *ngIf=\\\"!orderSent\\\" #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submitOrder(form)\\\" class=\\\"m-a-1\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name</label>\\r\\n    <input class=\\\"form-control\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"order.name\\\" required />\\r\\n    <span *ngIf=\\\"submitted && name.invalid\\\" class=\\\"text-danger\\\">Please enter your name</span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Address</label>\\r\\n    <input class=\\\"form-control\\\" #address=\\\"ngModel\\\" name=\\\"address\\\" [(ngModel)]=\\\"order.address\\\" required />\\r\\n    <span *ngIf=\\\"submitted && address.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your address\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>City</label>\\r\\n    <input class=\\\"form-control\\\" #city=\\\"ngModel\\\" name=\\\"city\\\" [(ngModel)]=\\\"order.city\\\" required />\\r\\n    <span *ngIf=\\\"submitted && city.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your city\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>State</label>\\r\\n    <input class=\\\"form-control\\\" #state=\\\"ngModel\\\" name=\\\"state\\\" [(ngModel)]=\\\"order.state\\\" required />\\r\\n    <span *ngIf=\\\"submitted && state.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your state\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Zip/Postal Code</label>\\r\\n    <input class=\\\"form-control\\\" #zip=\\\"ngModel\\\" name=\\\"zip\\\" [(ngModel)]=\\\"order.zip\\\" required />\\r\\n    <span *ngIf=\\\"submitted && zip.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your zip/postal code\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Country</label>\\r\\n    <input class=\\\"form-control\\\" #country=\\\"ngModel\\\" name=\\\"country\\\" [(ngModel)]=\\\"order.country\\\" required />\\r\\n    <span *ngIf=\\\"submitted && country.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your country\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"text-xs-center\\\">\\r\\n    <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/cart\\\">Back</button>\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Complete Order</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { OrderRepository } from \"../model/order.repository\";\r\nimport { Order } from \"../model/order.model\";\r\n\r\n@Component({\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: [\"checkout.component.css\"]\r\n})\r\nexport class CheckoutComponent {\r\n  orderSent:boolean = false;\r\n  submitted:boolean = false;\r\n\r\n  constructor(public repository:OrderRepository, public order:Order) { }\r\n\r\n  submitOrder(form:NgForm) {\r\n    this.submitted = true;\r\n    if (form.valid) {\r\n      this.repository.saveOrder(this.order).subscribe(order => {\r\n        this.order.clear();\r\n        this.orderSent = true;\r\n        this.submitted = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[counterOf]\"\r\n})\r\nexport class CounterDirective {\r\n  constructor(private container:ViewContainerRef, private template:TemplateRef<Object>) {\r\n\r\n  }\r\n\r\n  @Input(\"counterOf\")\r\n  counter:number;\r\n\r\n  ngOnChanges(changes:SimpleChanges) {\r\n    this.container.clear();\r\n    for (let i = 0; i < this.counter; i++) {\r\n      this.container.createEmbeddedView(this.template, new CounterDirectiveContext(i + 1));\r\n    }\r\n  }\r\n}\r\n\r\nclass CounterDirectiveContext {\r\n  constructor(public $implicit:any) { }\r\n}\r\n","module.exports = \"<div class=\\\"navbar navbar-inverse bg-inverse\\\">\\r\\n  <a class=\\\"navbar-brand\\\">SPORTS STORE</a>\\r\\n  <cart-summary></cart-summary>\\r\\n</div>\\r\\n<div class=\\\"col-xs-3 p-a-1\\\">\\r\\n  <button class=\\\"btn btn-block btn-outline-primary\\\" (click)=\\\"changeCategory()\\\">\\r\\n    Home\\r\\n  </button>\\r\\n  <button *ngFor=\\\"let cat of categories\\\"\\r\\n          class=\\\"btn btn-outline-primary btn-block\\\"\\r\\n          [class.active]=\\\"cat == selectedCategory\\\"\\r\\n          (click)=\\\"changeCategory(cat)\\\">\\r\\n    {{cat}}\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"col-xs-9 p-a-1\\\">\\r\\n  <div *ngFor=\\\"let product of products\\\" class=\\\"card card-outline-primary\\\">\\r\\n    <h4 class=\\\"card-header\\\">\\r\\n      {{product.name}}\\r\\n      <span class=\\\"pull-xs-right tag tag-pill tag-primary\\\">\\r\\n        {{product.price | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n      </span>\\r\\n    </h4>\\r\\n    <div class=\\\"card-text p-a-1\\\">\\r\\n      {{product.description}}\\r\\n      <button class=\\\"btn btn-success btn-sm pull-xs-right\\\" (click)=\\\"addProductToCart(product)\\\">\\r\\n        Add To Cart        \\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-inline pull-xs-left m-r-1\\\">\\r\\n    <select class=\\\"form-control\\\" [value]=\\\"productsPerPage\\\"\\r\\n        (change)=\\\"changePageSize($event.target.value)\\\">\\r\\n      <option value=\\\"3\\\">3 per Page</option>\\r\\n      <option value=\\\"4\\\">4 per Page</option>\\r\\n      <option value=\\\"6\\\">6 per Page</option>\\r\\n      <option value=\\\"8\\\">8 per Page</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"btn-group pull-xs-right\\\">\\r\\n    <button *counter=\\\"let page of pageCount\\\"\\r\\n            (click)=\\\"changePage(page)\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\"\\r\\n            [class.active]=\\\"page == selectedPage\\\">\\r\\n      {{page}}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Product } from \"../model/product.model\";\r\nimport { ProductRepository } from \"../model/product.repository\";\r\nimport { Cart } from \"../model/cart.model\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"store\",\r\n  //moduleId: module.id,\r\n  templateUrl: \"store.component.html\"\r\n})\r\nexport class StoreComponent {\r\n  public selectedCategory = null;\r\n  public productsPerPage = 4;\r\n  public selectedPage = 1;\r\n\r\n  constructor(private repository:ProductRepository, private cart:Cart, private router:Router) { }\r\n\r\n  get products():Product[] {\r\n    let pageIndex = (this.selectedPage - 1) * this.productsPerPage\r\n    return this.repository.getProducts(this.selectedCategory).slice(pageIndex, pageIndex + this.productsPerPage);\r\n  }\r\n\r\n  get categories():string[] {\r\n    return this.repository.getCategories();\r\n  }\r\n\r\n  changeCategory(newCategory?:string) {\r\n    this.selectedCategory = newCategory;\r\n  }\r\n\r\n  changePage(newPage:number) {\r\n    this.selectedPage = newPage;\r\n  }\r\n\r\n  changePageSize(newSize:number) {\r\n    this.productsPerPage = Number(newSize);\r\n    this.changePage(1);\r\n  }\r\n\r\n  get pageCount():number {\r\n    return Math.ceil(this.repository.getProducts(this.selectedCategory).length / this.productsPerPage);\r\n  }\r\n\r\n  // get pageNumbers():number[] {\r\n  //   return Array(Math.ceil(this.repository.getProducts(this.selectedCategory).length / this.productsPerPage))\r\n  //       .fill(0).map((x, i) => i + 1);\r\n  // }\r\n\r\n  addProductToCart(product:Product) {\r\n    this.cart.addLine(product);\r\n    this.router.navigateByUrl(\"/cart\");\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ModelModule } from \"../model/model.module\";\r\nimport { StoreComponent } from \"./store.component\";\r\nimport { CounterDirective } from \"./counter.directive\";\r\nimport { CartSummaryComponent } from \"./cartsummary.component\";\r\nimport { CartDetailComponent } from \"./cartDetail.component\";\r\nimport { CheckoutComponent } from \"./checkout.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n@NgModule({\r\n  imports: [ModelModule, BrowserModule, FormsModule, RouterModule],\r\n  declarations: [StoreComponent, CounterDirective, CartSummaryComponent, CartDetailComponent, CheckoutComponent],\r\n  exports: [StoreComponent, CartDetailComponent, CheckoutComponent]\r\n})\r\nexport class StoreModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from \"@angular/router\";\r\nimport { StoreComponent } from \"./store/store.component\";\r\n\r\n@Injectable()\r\nexport class StoreFirstGuard {\r\n  private firstNavigation = true;\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  canActivate(route:ActivatedRouteSnapshot, state:RouterStateSnapshot):boolean {\r\n    if (this.firstNavigation) {\r\n      this.firstNavigation = false;\r\n      if (route.component != StoreComponent) {\r\n        this.router.navigateByUrl(\"/\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}